FROM rust:buster as runtime
RUN apt-get update &&\
    apt-get install -y curl postgresql supervisor
RUN pg_dropcluster $(pg_lsclusters -h | cut -d' ' -f-2 | head -n1)
RUN rustup component add rust-src

WORKDIR /opt
ENV CONDA_DIR /opt/conda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
     /bin/bash ~/miniconda.sh -b -p /opt/conda

ENV PATH=$CONDA_DIR/bin:$PATH

RUN conda install pytorch torchvision torchaudio cpuonly -c pytorch

FROM rust:buster AS chef
WORKDIR app
RUN cargo install cargo-chef

FROM chef AS planner
COPY . .
COPY ./docker/config.toml $CARGO_HOME/config.toml
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json
RUN cargo chef cook --recipe-path recipe.json
COPY . .
RUN cargo build --bin api

FROM runtime
WORKDIR /

ENV LIBTORCH=${TORCH_HOME}
ENV LD_LIBRARY_PATH=${LIBTORCH}/lib:$LD_LIBRARY_PATH

COPY --from=builder /app/target/debug/api /usr/local/bin/shuttle-backend
COPY --from=builder /app/service /app/service
COPY --from=builder /app/common /app/common
COPY --from=builder /app/codegen /app/codegen

COPY docker/config.toml $CARGO_HOME/config.toml
COPY docker/entrypoint.sh /bin/entrypoint.sh
COPY docker/wait-for-pg-then /usr/bin/wait-for-pg-then
COPY docker/supervisord.conf /usr/share/supervisord/supervisord.conf
ENTRYPOINT ["/bin/entrypoint.sh"]
